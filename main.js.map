{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/services/the-movie-db.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/tv-show/tv-show.component.html","./src/app/components/tv-show/tv-show.component.ts","./src/app/components/movie/movie.component.html","./src/app/components/movie/movie.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <nav class=\"navbar\">\n        <a routerLink=\"/\" class=\"navbar-brand\">\n            <img class=\"netflix-logo\" src=\"assets/images/netflix-logo.png\" alt=\"\">\n        </a>\n        <div class=\"navbar-menu\">\n            <a class=\"navbar-item\" routerLink=\"/\">Home</a>\n            <a class=\"navbar-item\" routerLink=\"/tv-shows\">TV Shows</a>\n            <a class=\"navbar-item\" routerLink=\"/movies\">Movies</a>\n        </div>\n        \n        <a class=\"btn btn-rect navbar-get-started\" href=\"#\">Get started</a>\n\n        <a class=\"navbar-right-item\" href=\"#\"><mat-icon>search</mat-icon></a>\n        <a class=\"navbar-right-item\" href=\"#\">Enfants</a>\n        <a class=\"navbar-right-item\" href=\"#\"><mat-icon>card_giftcard</mat-icon></a>\n        <a class=\"navbar-right-item\" href=\"#\"><mat-icon>notifications</mat-icon></a>\n        <img class=\"navbar-profile-pic\" src=\"assets/images/profile-pic.jpg\" alt=\"avatar\" />\n    </nav>\n</header>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Credits } from '../models/credits.model';\nimport { Movie } from '../models/movie.model';\nimport { ResponseList } from '../models/response-list.model';\nimport { Season } from '../models/season.model';\nimport { TvShow } from '../models/tv-show.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TheMovieDbService {\n\n  private apiUrl = 'https://api.themoviedb.org/3';\n\n  constructor(private http: HttpClient) { }\n\n\n  //\n  // Movie\n  //\n  getMovie(id: string): Observable<Movie> {\n    return this.http.get<Movie>(`${this.apiUrl}/movie/${id}?api_key=${environment.apiKey}`);\n  }\n\n  getMovieCredits(id: string): Observable<Credits> {\n    return this.http.get<Credits>(`${this.apiUrl}/movie/${id}/credits?api_key=${environment.apiKey}`);\n  }\n\n  getMoviesRecommendations(id: string): Observable<ResponseList<Movie>> {\n    return this.http.get<ResponseList<Movie>>(`${this.apiUrl}/movie/${id}/recommendations?api_key=${environment.apiKey}`);\n  }\n\n\n  //\n  // Movies\n  //\n  getPopularMovies(): Observable<ResponseList<Movie>> {\n    return this.http.get<ResponseList<Movie>>(`${this.apiUrl}/movie/popular?api_key=${environment.apiKey}`);\n  }\n\n  getTopRatedMovies(): Observable<ResponseList<Movie>> {\n    return this.http.get<ResponseList<Movie>>(`${this.apiUrl}/movie/top_rated?api_key=${environment.apiKey}`);\n  }\n\n  getUpcomingMovies(): Observable<ResponseList<Movie>> {\n    return this.http.get<ResponseList<Movie>>(`${this.apiUrl}/movie/upcoming?api_key=${environment.apiKey}`);\n  }\n\n\n  //\n  // TV Show\n  //\n  getTvShow(id: string): Observable<TvShow> {\n    return this.http.get<TvShow>(`${this.apiUrl}/tv/${id}?api_key=${environment.apiKey}`);\n  }\n  \n  getTvShowCredits(id: string): Observable<Credits> {\n    return this.http.get<Credits>(`${this.apiUrl}/tv/${id}/credits?api_key=${environment.apiKey}`);\n  }\n\n  getTvShowSeason(id: string, season_number: number): Observable<Season> {\n    return this.http.get<Season>(`${this.apiUrl}/tv/${id}/season/${season_number}?api_key=${environment.apiKey}`);\n  }\n  \n  getTvShowsRecommendations(id: string): Observable<ResponseList<TvShow>> {\n    return this.http.get<ResponseList<TvShow>>(`${this.apiUrl}/tv/${id}/recommendations?api_key=${environment.apiKey}`);\n  }\n\n\n  //\n  // TV Shows\n  //\n  getPopularTvShows(): Observable<ResponseList<TvShow>> {\n    return this.http.get<ResponseList<TvShow>>(`${this.apiUrl}/tv/popular?api_key=${environment.apiKey}`);\n  }\n\n  getTopRatedTvShows(): Observable<ResponseList<TvShow>> {\n    return this.http.get<ResponseList<TvShow>>(`${this.apiUrl}/tv/top_rated?api_key=${environment.apiKey}`);\n  }\n\n  getOnAirTvShows(): Observable<ResponseList<TvShow>> {\n    return this.http.get<ResponseList<TvShow>>(`${this.apiUrl}/tv/on_the_air?api_key=${environment.apiKey}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiKey: '966bc16006cd2667daf628d997d83afb',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"header-container\">\n    <div class=\"header-info-container\">\n        <h1 class=\"info-title\">{{ popularTvShows[0].name }}</h1>\n        <div class=\"info-synopsis\">{{ popularTvShows[0].overview }}</div>\n        <div><a class=\"btn btn-rect\" routerLink=\"/tv-shows/{{ popularTvShows[0].id }}\">WATCH NOW</a></div>\n    </div>\n    <div class=\"header-img-container\" style='background-image: url(\"https://image.tmdb.org/t/p/original/{{ popularTvShows[0].backdrop_path }}\");'>\n        <div class=\"header-img\"></div>\n    </div>\n</div>\n\n<section class=\"collection\">\n    <h3 class=\"collection-name\">Popular tv-shows</h3>\n    <ul class=\"horizontal-row\">\n        <li *ngFor=\"let tvShow of popularTvShows\" class=\"horizontal-row-item\">\n            <a routerLink=\"/tv-shows/{{ tvShow.id }}\">\n                <img class=\"tv-show-img\" src=\"https://image.tmdb.org/t/p/original/{{ tvShow.poster_path }}\" alt=\"{{ tvShow.name }}\">\n                <span class=\"row-item-title\">{{ tvShow.name }}</span>\n            </a>\n        </li>\n    </ul>\n</section>\n\n<section class=\"collection\">\n    <h3 class=\"collection-name\">Popular movies</h3>\n    <ul class=\"horizontal-row\">\n        <li *ngFor=\"let movie of popularMovies\" class=\"horizontal-row-item\">\n            <a routerLink=\"/movies/{{ movie.id }}\">\n                <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/original/{{ movie.backdrop_path }}\" alt=\"{{ movie.title }}\">\n                <span class=\"row-item-title\">{{ movie.title }}</span>\n            </a>\n        </li>\n    </ul>\n</section>\n\n<section class=\"collection\">\n    <h3 class=\"collection-name\">TV On The Air</h3>\n    <ul class=\"horizontal-row\">\n        <li *ngFor=\"let tvShow of onAirTvShows\" class=\"horizontal-row-item\">\n            <a routerLink=\"/tv-shows/{{ tvShow.id }}\">\n                <img class=\"tv-show-img\" src=\"https://image.tmdb.org/t/p/original/{{ tvShow.poster_path }}\" alt=\"{{ tvShow.name }}\">\n                <span class=\"row-item-title\">{{ tvShow.name }}</span>\n            </a>\n        </li>\n    </ul>\n</section>\n\n<section class=\"collection\">\n    <h3 class=\"collection-name\">Top rated tv-shows</h3>\n    <ul class=\"horizontal-row\">\n        <li *ngFor=\"let tvShow of topRatedTvShows\" class=\"horizontal-row-item\">\n            <a routerLink=\"/tv-shows/{{ tvShow.id }}\">\n                <img class=\"tv-show-img\" src=\"https://image.tmdb.org/t/p/original/{{ tvShow.poster_path }}\" alt=\"{{ tvShow.name }}\">\n                <span class=\"row-item-title\">{{ tvShow.name }}</span>\n            </a>\n        </li>\n    </ul>\n</section>\n\n<section class=\"collection\">\n    <h3 class=\"collection-name\">Top rated movies</h3>\n    <ul class=\"horizontal-row\">\n        <li *ngFor=\"let movie of topRatedMovies\" class=\"horizontal-row-item\">\n            <a routerLink=\"/movies/{{ movie.id }}\">\n                <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/original/{{ movie.backdrop_path }}\" alt=\"{{ movie.title }}\">\n                <span class=\"row-item-title\">{{ movie.title }}</span>\n            </a>\n        </li>\n    </ul>\n</section>\n\n<section class=\"collection\">\n    <h3 class=\"collection-name\">Upcoming movies</h3>\n    <ul class=\"horizontal-row\">\n        <li *ngFor=\"let movie of upcomingMovies\" class=\"horizontal-row-item\">\n            <a routerLink=\"/movies/{{ movie.id }}\">\n                <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/original/{{ movie.backdrop_path }}\" alt=\"{{ movie.title }}\">\n                <span class=\"row-item-title\">{{ movie.title }}</span>\n            </a>\n        </li>\n    </ul>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Movie } from 'src/app/models/movie.model';\nimport { TvShow } from 'src/app/models/tv-show.model';\nimport { TheMovieDbService } from 'src/app/services/the-movie-db.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  popularTvShows: TvShow[] = [];\n  popularMovies: Movie[] = [];\n  onAirTvShows: TvShow[] = [];\n  topRatedTvShows: TvShow[] = [];\n  topRatedMovies: Movie[] = [];\n  upcomingMovies: Movie[] = [];\n\n  constructor(private theMovieDbService: TheMovieDbService) { }\n\n  ngOnInit(): void {\n    this.theMovieDbService.getPopularTvShows().subscribe(reponse => this.popularTvShows = reponse.results);\n    this.theMovieDbService.getPopularMovies().subscribe(reponse => this.popularMovies = reponse.results);\n    this.theMovieDbService.getOnAirTvShows().subscribe(reponse => this.onAirTvShows = reponse.results);\n    this.theMovieDbService.getTopRatedTvShows().subscribe(reponse => this.topRatedTvShows = reponse.results);\n    this.theMovieDbService.getTopRatedMovies().subscribe(reponse => this.topRatedMovies = reponse.results);\n    this.theMovieDbService.getUpcomingMovies().subscribe(reponse => this.upcomingMovies = reponse.results);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <p>Questions? Call 1-866-579-7172</p>\n    <div class=\"footer-cols\">\n        \n        <ul>\n            <li><a href=\"#\">FAQ</a></li>\n            <li><a href=\"#\">Investor Relations</a></li>\n            <li><a href=\"#\">Ways To Watch</a></li>\n            <li><a href=\"#\">Corporate Information</a></li>\n            <li><a href=\"#\">Netflix Originals</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#\">Help Center</a></li>\n            <li><a href=\"#\">Jobs</a></li>\n            <li><a href=\"#\">Terms Of Use</a></li>\n            <li><a href=\"#\">Contact Us</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#\">Account</a></li>\n            <li><a href=\"#\">Redeem Gift Cards</a></li>\n            <li><a href=\"#\">Privacy</a></li>\n            <li><a href=\"#\">Speed Test</a></li>\n        </ul>\n        <ul>\n            <li><a href=\"#\">Media Center</a></li>\n            <li><a href=\"#\">Buy Gift Cards</a></li>\n            <li><a href=\"#\">Cookie Preferences</a></li>\n            <li><a href=\"#\">Legal Notices</a></li>\n        </ul>\n        \n    </div>\n    \n</footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { MovieComponent } from './components/movie/movie.component';\nimport { TvShowComponent } from './components/tv-show/tv-show.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    MovieComponent,\n    TvShowComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<section class=\"header-container\">\n    <div class=\"header-info-container\">\n        <h1 class=\"info-title\">{{ tvShow.name }}</h1>\n        <div class=\"info-metadata\">\n            <span class=\"info-metadata-item\">{{ tvShow.first_air_date }}</span>\n            <span class=\"info-metadata-divider\">|</span>\n            <span class=\"info-metadata-item\">{{ tvShow.status }}</span>\n            <span class=\"info-metadata-divider\">|</span>\n            <span class=\"info-metadata-item\">{{ tvShow.number_of_seasons }} seasons</span>\n            <span class=\"info-metadata-divider\">|</span>\n            <span class=\"info-metadata-item\">{{ tvShow.vote_average }} / 10</span>\n        </div>\n        <div class=\"info-synopsis\">{{ tvShow.overview }}</div>\n        <div class=\"info-cast\">\n            <span class=\"info-cast-label\">With: </span>\n            <span class=\"info-cast-item\" *ngFor=\"let cast of credits.cast | slice:0:5\">{{ cast.name }}, </span>\n        </div>\n    </div>\n    <div class=\"header-img-container\" style='background-image: url(\"https://image.tmdb.org/t/p/original/{{ tvShow.backdrop_path }}\");'>\n        <div class=\"header-img\"></div>\n    </div>\n</section>\n\n<section class=\"section\">\n    <div class=\"section-header\">\n        <h2 class=\"section-header-text\">Episodes</h2>\n        <h2 class=\"section-subheader-text\">{{ tvShow.name }}</h2>\n    </div>\n    <div class=\"season-selector-container\">\n        <select class=\"season-selector\" (change)=\"selectChangeHandler($event)\">\n            <option *ngFor=\"let season of seasons\" [value]=\"season.season_number\" [selected]=\"season.season_number == showSeason\">Season {{ season.season_number }}</option>\n        </select>\n    </div>\n    <div class=\"seasons-container\">\n        <div class=\"season\" [ngClass]=\"{'season-active': season.season_number == showSeason }\" *ngFor=\"let season of seasons; let f = first\">\n            <div class=\"season-metadata\">\n                <span class=\"season-release\">Release: {{ season.air_date }}</span>\n                <p class=\"season-synopsis\">{{ season.overview }}</p>\n            </div>\n            <div class=\"episodes-container\">\n                <div class=\"episode\" *ngFor=\"let episode of season.episodes\">\n                    <img class=\"episode-thumbnail\" src=\"https://image.tmdb.org/t/p/w500/{{ episode.still_path }}\" alt=\"\">\n                    <h3 class=\"episode-title\">{{ episode.episode_number }}. {{ episode.name }}</h3>\n                    <p class=\"episode-synopsis\">{{ episode.overview }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<section class=\"section\">\n    <div class=\"section-header\">\n        <h2 class=\"section-header-text\">Recommendations</h2>\n    </div>\n    <div class=\"link-container\">\n        <a class=\"title-link\" *ngFor=\"let recommendedTvShow of recommendations\" routerLink=\"/tv-shows/{{ recommendedTvShow.id }}\" title=\"{{ recommendedTvShow.name }}\">\n            <img class=\"title-link-img\" src=\"https://image.tmdb.org/t/p/w500/{{ recommendedTvShow.backdrop_path }}\" alt=\"\">\n        </a>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Credits } from 'src/app/models/credits.model';\nimport { Season } from 'src/app/models/season.model';\nimport { TvShow } from 'src/app/models/tv-show.model';\nimport { TheMovieDbService } from 'src/app/services/the-movie-db.service';\n\n@Component({\n  selector: 'app-tv-show',\n  templateUrl: './tv-show.component.html',\n  styleUrls: ['./tv-show.component.css']\n})\nexport class TvShowComponent implements OnInit {\n\n  tvShow!: TvShow;\n  credits!: Credits;\n  seasons: Season[] = [];\n  recommendations: TvShow[] = [];\n\n  showSeason: number = 1;\n\n  constructor(\n    private route: ActivatedRoute,\n    private theMovieDbService: TheMovieDbService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n\n      this.theMovieDbService.getTvShow(params.id).subscribe(tvShow => {\n        this.tvShow = tvShow;\n\n        this.seasons = [];\n        for (let seasonNumber = 1; seasonNumber <= (tvShow.number_of_seasons ?? 0); seasonNumber++) {\n          this.theMovieDbService.getTvShowSeason(params.id, seasonNumber).subscribe(season => {\n            this.seasons.push(season);\n            this.seasons.sort((a, b) => a.season_number - b.season_number);\n          });\n        }\n      });\n\n      this.theMovieDbService.getTvShowCredits(params.id)\n        .subscribe(credits => this.credits = credits);\n\n      this.theMovieDbService.getTvShowsRecommendations(params.id)\n        .subscribe(recommendations => this.recommendations = recommendations.results);\n    })\n  }\n\n  selectChangeHandler(event: any) {\n    this.showSeason = event.target.value;\n  }\n}\n","<section class=\"header-container\">\n    <div class=\"header-info-container\">\n        <h1 class=\"info-title\">{{ movie.title }}</h1>\n        <div class=\"info-metadata\">\n            <span class=\"info-metadata-item\">{{ movie.release_date }}</span>\n            <span class=\"info-metadata-divider\">|</span>\n            <span class=\"info-metadata-item\">{{ movie.status }}</span>\n            <span class=\"info-metadata-divider\">|</span>\n            <span class=\"info-metadata-item\">{{ movie.runtime }} min</span>\n            <span class=\"info-metadata-divider\">|</span>\n            <span class=\"info-metadata-item\">{{ movie.vote_average }} / 10</span>\n        </div>\n        <div class=\"info-synopsis\">{{ movie.overview }}</div>\n        <div class=\"info-cast\">\n            <span class=\"info-cast-label\">With: </span>\n            <span class=\"info-cast-item\" *ngFor=\"let cast of credits.cast | slice:0:5\">{{ cast.name }}, </span>\n        </div>\n    </div>\n    <div class=\"header-img-container\" style='background-image: url(\"https://image.tmdb.org/t/p/original/{{ movie.backdrop_path }}\");'>\n        <div class=\"header-img\"></div>\n    </div>\n</section>\n\n<section class=\"section\">\n    <div class=\"section-header\">\n        <h2 class=\"section-header-text\">Recommendations</h2>\n    </div>\n    <div class=\"link-container\">\n        <a class=\"title-link\" *ngFor=\"let recommendedMovie of recommendations\" routerLink=\"/movies/{{ recommendedMovie.id }}\" title=\"{{ recommendedMovie.title }}\">\n            <img class=\"title-link-img\" src=\"https://image.tmdb.org/t/p/w500/{{ recommendedMovie.backdrop_path }}\" alt=\"\">\n        </a>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Credits } from 'src/app/models/credits.model';\nimport { Movie } from 'src/app/models/movie.model';\nimport { TheMovieDbService } from 'src/app/services/the-movie-db.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\n  movie!: Movie;\n  credits!: Credits;\n  recommendations: Movie[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private theMovieDbService: TheMovieDbService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n\n      this.theMovieDbService.getMovie(params.id)\n        .subscribe(movie => this.movie = movie);\n\n      this.theMovieDbService.getMovieCredits(params.id)\n        .subscribe(credits => this.credits = credits);\n\n      this.theMovieDbService.getMoviesRecommendations(params.id)\n        .subscribe(recommendations => this.recommendations = recommendations.results);\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { MovieComponent } from './components/movie/movie.component';\nimport { TvShowComponent } from './components/tv-show/tv-show.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch:'full', component: HomeComponent},\n  {path: 'movies/:id', component: MovieComponent},\n  {path: 'tv-shows/:id', component: TvShowComponent},\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}